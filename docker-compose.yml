version: "3.7"

services:
  user_service:
    build: user_service/.
    container_name: user-service
    working_dir: /usr/src/user_service
    entrypoint: user_service/user_entrypoint.sh
    volumes:
      - .:/usr/src/user_service
    ports:
      - "8001:8000"
    depends_on:
      - database_schema
      - amqp
    networks:
      - default

  product_service:
    build: product_service/.
    container_name: "product-service"
    working_dir: /usr/src/product_service
    entrypoint: product_service/product_entrypoint.sh
    volumes:
      - .:/usr/src/product_service
    ports:
      - "8002:8000"
    depends_on:
      - database_schema 
      - amqp
    networks:
      - default

  paymentgateway_service:
    build: paymentgateway_service/.
    container_name: "payment-gateway-service"
    working_dir: /usr/src/paymentgateway_service
    entrypoint: paymentgateway_service/payment_entrypoint.sh
    volumes:
      - .:/usr/src/paymentgateway_service
    ports:
      - "8003:8000"
    depends_on:
      - database_schema
      - amqp
    networks:
      - default

  checkout_service:
    build: checkout_service/.
    container_name: "checkout-service"
    working_dir: /usr/src/checkout_service
    entrypoint: checkout_service/checkout_entrypoint.sh
    volumes:
      - .:/usr/src/checkout_service
    ports:
      - "8004:8000"
    depends_on:
      - database_schema
      - amqp
    networks:
      - default

  database_schema:
    container_name: micro-blue-orange-database
    image: library/postgres:14.6-alpine
    ports:
      - "5431:5432"
    volumes:
      - ./docker/build_dbs:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_MULTIPLE_DATABASES=user_service,admin:product_service,admin:paymentgateway_service,admin:checkout_service,admin
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
    networks:
      - default

  adminer:
    container_name: adminer-container
    image: adminer
    ports:
      - 8080:8080
    restart: always
    networks: 
      - default
  
  amqp:
    image: 'rabbitmq:3.11-management-alpine'
    container_name: micro-blue-orange-rabbitmq
    hostname: rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - rabbitmq:/var/lib/rabbitmq/mnesia
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    networks:
      - default

  user_worker:
    build: user_service/.
    container_name: user-worker
    restart: on-failure
    entrypoint: /usr/src/user_service/user_worker.sh
    volumes:
      - .:/usr/src
    depends_on:
      - user_service
      - paymentgateway_service
      - checkout_service
      - database_schema
    networks:
      - default

  payment_worker:
    build: paymentgateway_service/.
    container_name: payment-worker
    restart: on-failure
    entrypoint: /usr/src/paymentgateway_service/payment_worker.sh
    volumes:
      - .:/usr/src
    depends_on:
      - user_service
      - paymentgateway_service
      - checkout_service
      - database_schema
    networks:
      - default
  
  checkout_worker:
    build: checkout_service/.
    container_name: checkout-worker
    restart: on-failure
    entrypoint: /usr/src/checkout_service/checkout_worker.sh
    volumes:
      - .:/usr/src
    depends_on:
      - user_service
      - paymentgateway_service
      - checkout_service
      - database_schema
    networks:
      - default

volumes:
  postgres:
  rabbitmq:

networks:
  default:
    driver: bridge
